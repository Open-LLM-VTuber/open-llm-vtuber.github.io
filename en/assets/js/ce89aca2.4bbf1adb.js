"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5727],{5916:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>d,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"development-guide/backend/asr","title":"asr","description":"This is a placeholder. Don\'t look at this guide. It\'s incomplete and wrong.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/development-guide/backend/asr.md","sourceDirName":"development-guide/backend","slug":"/development-guide/backend/asr","permalink":"/en/docs/development-guide/backend/asr","draft":false,"unlisted":false,"editUrl":"https://github.com/Open-LLM-VTuber/Open-LLM-VTuber-Docs/tree/main/docs/development-guide/backend/asr.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"docSidebar","previous":{"title":"TTS","permalink":"/en/docs/development-guide/backend/tts"},"next":{"title":"Development Guide","permalink":"/en/docs/development-guide/overview"}}');var r=t(4848),i=t(8453);const d={sidebar_position:2},s=void 0,c={},a=[{value:"Add support for new Speech Recognition provider",id:"add-support-for-new-speech-recognition-provider",level:3},{value:"Add support for new LLM provider",id:"add-support-for-new-llm-provider",level:3}];function l(e){const n={admonition:"admonition",code:"code",h3:"h3",li:"li",ol:"ol",p:"p",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsx)(n.p,{children:"This is a placeholder. Don't look at this guide. It's incomplete and wrong."})}),"\n",(0,r.jsx)(n.h3,{id:"add-support-for-new-speech-recognition-provider",children:"Add support for new Speech Recognition provider"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Implement ",(0,r.jsx)(n.code,{children:"ASRInterface"})," defined in ",(0,r.jsx)(n.code,{children:"asr/asr_interface.py"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Add your new ASR provider into ",(0,r.jsx)(n.code,{children:"asr_factory"}),": the factory to instantiate and return the ASR instance."]}),"\n",(0,r.jsxs)(n.li,{children:["Add configuration to ",(0,r.jsx)(n.code,{children:"conf.yaml"}),". The dict with the same name will be passed into the constructor of your class as kwargs."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"add-support-for-new-llm-provider",children:"Add support for new LLM provider"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Implement ",(0,r.jsx)(n.code,{children:"LLMInterface"})," defined in ",(0,r.jsx)(n.code,{children:"llm/llm_interface.py"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Add your new LLM provider into ",(0,r.jsx)(n.code,{children:"llm_factory"}),": the factory to instantiate and return the LLM instance."]}),"\n",(0,r.jsxs)(n.li,{children:["Add configuration to ",(0,r.jsx)(n.code,{children:"conf.yaml"}),". The dict with the same name will be passed into the constructor of your class as kwargs."]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>s});var o=t(6540);const r={},i=o.createContext(r);function d(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);